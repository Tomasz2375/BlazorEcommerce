@page "/admin/products"
@inject IProductService ProductService
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin")]

<h3>Products</h3>

@if (ProductService.AdminProducts is null)
{
    <span>Loading products...</span>
}
else
{
    <button class="btn btn-primary float-end" @onclick="createProduct">
        <i class="oi oi-plus" /> Add new product
    </button>
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Product</th>
                <th>Variant</th>
                <th>Price</th>
                <th>Visible</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <Virtualize Items="ProductService.AdminProducts" Context="product">
                <tr>
                    <td>
                        @if (!string.IsNullOrEmpty(product.ImageUrl))
                        {
                            <img src="@product.ImageUrl" />
                        }
                        else if(product.Images.Count > 0)
                        {
                            <img src="@product.Images[0].Data" />
                        }
                    </td>
                    <td>@product.Title</td>
                    <td>
                        @foreach (var variant in product.Variants)
                        {
                            <span>@variant.ProductType!.Name</span>
                            <br />
                        }
                    </td>
                    <td>
                        @foreach (var variant in product.Variants)
                        {
                            <span>@variant.Price</span>
                            <br />
                        }
                    </td>
                    <td>@(product.Visible ? "✔️" : "")</td>
                    <td>
                        <button class="btn btn-primary" @onclick="(() => editProduct(product.Id))">
                            <i class="oi oi-pencil" />
                        </button>
                    </td>
                </tr>
            </Virtualize>
        </tbody>
    </table>
}
@code {
    protected override async Task OnInitializedAsync()
    {
        await ProductService.GetAdminProducts();
    }

    private void editProduct(int productId)
    {
        NavigationManager.NavigateTo($"admin/product/{productId}");
    }

    private void createProduct()
    {
        NavigationManager.NavigateTo($"admin/product");
    }
}
